// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/sessions_v1.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorDescription struct {
	Type                 string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Category             string            `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Code                 string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	CorrelationId        string            `protobuf:"bytes,4,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Status               string            `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Message              string            `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Cause                string            `protobuf:"bytes,7,opt,name=cause,proto3" json:"cause,omitempty"`
	StackTrace           string            `protobuf:"bytes,8,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	Details              map[string]string `protobuf:"bytes,9,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ErrorDescription) Reset()         { *m = ErrorDescription{} }
func (m *ErrorDescription) String() string { return proto.CompactTextString(m) }
func (*ErrorDescription) ProtoMessage()    {}
func (*ErrorDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3ff36d687210b6b, []int{0}
}

func (m *ErrorDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorDescription.Unmarshal(m, b)
}
func (m *ErrorDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorDescription.Marshal(b, m, deterministic)
}
func (m *ErrorDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorDescription.Merge(m, src)
}
func (m *ErrorDescription) XXX_Size() int {
	return xxx_messageInfo_ErrorDescription.Size(m)
}
func (m *ErrorDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorDescription.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorDescription proto.InternalMessageInfo

func (m *ErrorDescription) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ErrorDescription) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *ErrorDescription) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ErrorDescription) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *ErrorDescription) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ErrorDescription) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ErrorDescription) GetCause() string {
	if m != nil {
		return m.Cause
	}
	return ""
}

func (m *ErrorDescription) GetStackTrace() string {
	if m != nil {
		return m.StackTrace
	}
	return ""
}

func (m *ErrorDescription) GetDetails() map[string]string {
	if m != nil {
		return m.Details
	}
	return nil
}

type PagingParams struct {
	Skip                 int64    `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	Take                 int32    `protobuf:"varint,2,opt,name=take,proto3" json:"take,omitempty"`
	Total                bool     `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PagingParams) Reset()         { *m = PagingParams{} }
func (m *PagingParams) String() string { return proto.CompactTextString(m) }
func (*PagingParams) ProtoMessage()    {}
func (*PagingParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3ff36d687210b6b, []int{1}
}

func (m *PagingParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagingParams.Unmarshal(m, b)
}
func (m *PagingParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagingParams.Marshal(b, m, deterministic)
}
func (m *PagingParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagingParams.Merge(m, src)
}
func (m *PagingParams) XXX_Size() int {
	return xxx_messageInfo_PagingParams.Size(m)
}
func (m *PagingParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PagingParams.DiscardUnknown(m)
}

var xxx_messageInfo_PagingParams proto.InternalMessageInfo

func (m *PagingParams) GetSkip() int64 {
	if m != nil {
		return m.Skip
	}
	return 0
}

func (m *PagingParams) GetTake() int32 {
	if m != nil {
		return m.Take
	}
	return 0
}

func (m *PagingParams) GetTotal() bool {
	if m != nil {
		return m.Total
	}
	return false
}

type Session struct {
	// Identification
	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// Session info
	Active      bool   `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	OpenTime    string `protobuf:"bytes,5,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`
	CloseTime   string `protobuf:"bytes,6,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`
	RequestTime string `protobuf:"bytes,7,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	Address     string `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	Client      string `protobuf:"bytes,9,opt,name=client,proto3" json:"client,omitempty"`
	// Cached content
	User                 string   `protobuf:"bytes,11,opt,name=user,proto3" json:"user,omitempty"`
	Data                 string   `protobuf:"bytes,12,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3ff36d687210b6b, []int{2}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Session) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Session) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Session) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Session) GetOpenTime() string {
	if m != nil {
		return m.OpenTime
	}
	return ""
}

func (m *Session) GetCloseTime() string {
	if m != nil {
		return m.CloseTime
	}
	return ""
}

func (m *Session) GetRequestTime() string {
	if m != nil {
		return m.RequestTime
	}
	return ""
}

func (m *Session) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Session) GetClient() string {
	if m != nil {
		return m.Client
	}
	return ""
}

func (m *Session) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Session) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type SessionPage struct {
	Total                int64      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data                 []*Session `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SessionPage) Reset()         { *m = SessionPage{} }
func (m *SessionPage) String() string { return proto.CompactTextString(m) }
func (*SessionPage) ProtoMessage()    {}
func (*SessionPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3ff36d687210b6b, []int{3}
}

func (m *SessionPage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionPage.Unmarshal(m, b)
}
func (m *SessionPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionPage.Marshal(b, m, deterministic)
}
func (m *SessionPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionPage.Merge(m, src)
}
func (m *SessionPage) XXX_Size() int {
	return xxx_messageInfo_SessionPage.Size(m)
}
func (m *SessionPage) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionPage.DiscardUnknown(m)
}

var xxx_messageInfo_SessionPage proto.InternalMessageInfo

func (m *SessionPage) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *SessionPage) GetData() []*Session {
	if m != nil {
		return m.Data
	}
	return nil
}

// The request message containing the session page request.
type SessionPageRequest struct {
	CorrelationId        string            `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Filter               map[string]string `protobuf:"bytes,2,rep,name=filter,proto3" json:"filter,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Paging               *PagingParams     `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SessionPageRequest) Reset()         { *m = SessionPageRequest{} }
func (m *SessionPageRequest) String() string { return proto.CompactTextString(m) }
func (*SessionPageRequest) ProtoMessage()    {}
func (*SessionPageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3ff36d687210b6b, []int{4}
}

func (m *SessionPageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionPageRequest.Unmarshal(m, b)
}
func (m *SessionPageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionPageRequest.Marshal(b, m, deterministic)
}
func (m *SessionPageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionPageRequest.Merge(m, src)
}
func (m *SessionPageRequest) XXX_Size() int {
	return xxx_messageInfo_SessionPageRequest.Size(m)
}
func (m *SessionPageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionPageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionPageRequest proto.InternalMessageInfo

func (m *SessionPageRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *SessionPageRequest) GetFilter() map[string]string {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *SessionPageRequest) GetPaging() *PagingParams {
	if m != nil {
		return m.Paging
	}
	return nil
}

// The response message containing the session page response
type SessionPageReply struct {
	Error                *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Page                 *SessionPage      `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SessionPageReply) Reset()         { *m = SessionPageReply{} }
func (m *SessionPageReply) String() string { return proto.CompactTextString(m) }
func (*SessionPageReply) ProtoMessage()    {}
func (*SessionPageReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3ff36d687210b6b, []int{5}
}

func (m *SessionPageReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionPageReply.Unmarshal(m, b)
}
func (m *SessionPageReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionPageReply.Marshal(b, m, deterministic)
}
func (m *SessionPageReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionPageReply.Merge(m, src)
}
func (m *SessionPageReply) XXX_Size() int {
	return xxx_messageInfo_SessionPageReply.Size(m)
}
func (m *SessionPageReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionPageReply.DiscardUnknown(m)
}

var xxx_messageInfo_SessionPageReply proto.InternalMessageInfo

func (m *SessionPageReply) GetError() *ErrorDescription {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *SessionPageReply) GetPage() *SessionPage {
	if m != nil {
		return m.Page
	}
	return nil
}

// The request message containing the session id request.
type SessionIdRequest struct {
	CorrelationId        string   `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	SessionId            string   `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionIdRequest) Reset()         { *m = SessionIdRequest{} }
func (m *SessionIdRequest) String() string { return proto.CompactTextString(m) }
func (*SessionIdRequest) ProtoMessage()    {}
func (*SessionIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3ff36d687210b6b, []int{6}
}

func (m *SessionIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionIdRequest.Unmarshal(m, b)
}
func (m *SessionIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionIdRequest.Marshal(b, m, deterministic)
}
func (m *SessionIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionIdRequest.Merge(m, src)
}
func (m *SessionIdRequest) XXX_Size() int {
	return xxx_messageInfo_SessionIdRequest.Size(m)
}
func (m *SessionIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionIdRequest proto.InternalMessageInfo

func (m *SessionIdRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *SessionIdRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

// The request message containing the session open request.
type SessionOpenRequest struct {
	CorrelationId        string   `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName             string   `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Client               string   `protobuf:"bytes,5,opt,name=client,proto3" json:"client,omitempty"`
	User                 string   `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	Data                 string   `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionOpenRequest) Reset()         { *m = SessionOpenRequest{} }
func (m *SessionOpenRequest) String() string { return proto.CompactTextString(m) }
func (*SessionOpenRequest) ProtoMessage()    {}
func (*SessionOpenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3ff36d687210b6b, []int{7}
}

func (m *SessionOpenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionOpenRequest.Unmarshal(m, b)
}
func (m *SessionOpenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionOpenRequest.Marshal(b, m, deterministic)
}
func (m *SessionOpenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionOpenRequest.Merge(m, src)
}
func (m *SessionOpenRequest) XXX_Size() int {
	return xxx_messageInfo_SessionOpenRequest.Size(m)
}
func (m *SessionOpenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionOpenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionOpenRequest proto.InternalMessageInfo

func (m *SessionOpenRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *SessionOpenRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SessionOpenRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *SessionOpenRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SessionOpenRequest) GetClient() string {
	if m != nil {
		return m.Client
	}
	return ""
}

func (m *SessionOpenRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *SessionOpenRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// The request message containing the store session data request.
type SessionStoreDataRequest struct {
	CorrelationId        string   `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	SessionId            string   `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionStoreDataRequest) Reset()         { *m = SessionStoreDataRequest{} }
func (m *SessionStoreDataRequest) String() string { return proto.CompactTextString(m) }
func (*SessionStoreDataRequest) ProtoMessage()    {}
func (*SessionStoreDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3ff36d687210b6b, []int{8}
}

func (m *SessionStoreDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionStoreDataRequest.Unmarshal(m, b)
}
func (m *SessionStoreDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionStoreDataRequest.Marshal(b, m, deterministic)
}
func (m *SessionStoreDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionStoreDataRequest.Merge(m, src)
}
func (m *SessionStoreDataRequest) XXX_Size() int {
	return xxx_messageInfo_SessionStoreDataRequest.Size(m)
}
func (m *SessionStoreDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionStoreDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionStoreDataRequest proto.InternalMessageInfo

func (m *SessionStoreDataRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *SessionStoreDataRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *SessionStoreDataRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// The request message containing the update session user request.
type SessionUpdateUserRequest struct {
	CorrelationId        string   `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	SessionId            string   `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	User                 string   `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionUpdateUserRequest) Reset()         { *m = SessionUpdateUserRequest{} }
func (m *SessionUpdateUserRequest) String() string { return proto.CompactTextString(m) }
func (*SessionUpdateUserRequest) ProtoMessage()    {}
func (*SessionUpdateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3ff36d687210b6b, []int{9}
}

func (m *SessionUpdateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionUpdateUserRequest.Unmarshal(m, b)
}
func (m *SessionUpdateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionUpdateUserRequest.Marshal(b, m, deterministic)
}
func (m *SessionUpdateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionUpdateUserRequest.Merge(m, src)
}
func (m *SessionUpdateUserRequest) XXX_Size() int {
	return xxx_messageInfo_SessionUpdateUserRequest.Size(m)
}
func (m *SessionUpdateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionUpdateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionUpdateUserRequest proto.InternalMessageInfo

func (m *SessionUpdateUserRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *SessionUpdateUserRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *SessionUpdateUserRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

// The request message containing the empty session request.
type SessionEmptyRequest struct {
	CorrelationId        string   `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionEmptyRequest) Reset()         { *m = SessionEmptyRequest{} }
func (m *SessionEmptyRequest) String() string { return proto.CompactTextString(m) }
func (*SessionEmptyRequest) ProtoMessage()    {}
func (*SessionEmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3ff36d687210b6b, []int{10}
}

func (m *SessionEmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionEmptyRequest.Unmarshal(m, b)
}
func (m *SessionEmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionEmptyRequest.Marshal(b, m, deterministic)
}
func (m *SessionEmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionEmptyRequest.Merge(m, src)
}
func (m *SessionEmptyRequest) XXX_Size() int {
	return xxx_messageInfo_SessionEmptyRequest.Size(m)
}
func (m *SessionEmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionEmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionEmptyRequest proto.InternalMessageInfo

func (m *SessionEmptyRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

// The request message containing the session object request.
type SessionObjectRequest struct {
	CorrelationId        string   `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Session              *Session `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionObjectRequest) Reset()         { *m = SessionObjectRequest{} }
func (m *SessionObjectRequest) String() string { return proto.CompactTextString(m) }
func (*SessionObjectRequest) ProtoMessage()    {}
func (*SessionObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3ff36d687210b6b, []int{11}
}

func (m *SessionObjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionObjectRequest.Unmarshal(m, b)
}
func (m *SessionObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionObjectRequest.Marshal(b, m, deterministic)
}
func (m *SessionObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionObjectRequest.Merge(m, src)
}
func (m *SessionObjectRequest) XXX_Size() int {
	return xxx_messageInfo_SessionObjectRequest.Size(m)
}
func (m *SessionObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionObjectRequest proto.InternalMessageInfo

func (m *SessionObjectRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *SessionObjectRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

// The response message containing the session object response
type SessionObjectReply struct {
	Error                *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Session              *Session          `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SessionObjectReply) Reset()         { *m = SessionObjectReply{} }
func (m *SessionObjectReply) String() string { return proto.CompactTextString(m) }
func (*SessionObjectReply) ProtoMessage()    {}
func (*SessionObjectReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3ff36d687210b6b, []int{12}
}

func (m *SessionObjectReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionObjectReply.Unmarshal(m, b)
}
func (m *SessionObjectReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionObjectReply.Marshal(b, m, deterministic)
}
func (m *SessionObjectReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionObjectReply.Merge(m, src)
}
func (m *SessionObjectReply) XXX_Size() int {
	return xxx_messageInfo_SessionObjectReply.Size(m)
}
func (m *SessionObjectReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionObjectReply.DiscardUnknown(m)
}

var xxx_messageInfo_SessionObjectReply proto.InternalMessageInfo

func (m *SessionObjectReply) GetError() *ErrorDescription {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *SessionObjectReply) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

// The response message containing the empty session response
type SessionEmptyReply struct {
	Error                *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SessionEmptyReply) Reset()         { *m = SessionEmptyReply{} }
func (m *SessionEmptyReply) String() string { return proto.CompactTextString(m) }
func (*SessionEmptyReply) ProtoMessage()    {}
func (*SessionEmptyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3ff36d687210b6b, []int{13}
}

func (m *SessionEmptyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionEmptyReply.Unmarshal(m, b)
}
func (m *SessionEmptyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionEmptyReply.Marshal(b, m, deterministic)
}
func (m *SessionEmptyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionEmptyReply.Merge(m, src)
}
func (m *SessionEmptyReply) XXX_Size() int {
	return xxx_messageInfo_SessionEmptyReply.Size(m)
}
func (m *SessionEmptyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionEmptyReply.DiscardUnknown(m)
}

var xxx_messageInfo_SessionEmptyReply proto.InternalMessageInfo

func (m *SessionEmptyReply) GetError() *ErrorDescription {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*ErrorDescription)(nil), "sessions_v1.ErrorDescription")
	proto.RegisterMapType((map[string]string)(nil), "sessions_v1.ErrorDescription.DetailsEntry")
	proto.RegisterType((*PagingParams)(nil), "sessions_v1.PagingParams")
	proto.RegisterType((*Session)(nil), "sessions_v1.Session")
	proto.RegisterType((*SessionPage)(nil), "sessions_v1.SessionPage")
	proto.RegisterType((*SessionPageRequest)(nil), "sessions_v1.SessionPageRequest")
	proto.RegisterMapType((map[string]string)(nil), "sessions_v1.SessionPageRequest.FilterEntry")
	proto.RegisterType((*SessionPageReply)(nil), "sessions_v1.SessionPageReply")
	proto.RegisterType((*SessionIdRequest)(nil), "sessions_v1.SessionIdRequest")
	proto.RegisterType((*SessionOpenRequest)(nil), "sessions_v1.SessionOpenRequest")
	proto.RegisterType((*SessionStoreDataRequest)(nil), "sessions_v1.SessionStoreDataRequest")
	proto.RegisterType((*SessionUpdateUserRequest)(nil), "sessions_v1.SessionUpdateUserRequest")
	proto.RegisterType((*SessionEmptyRequest)(nil), "sessions_v1.SessionEmptyRequest")
	proto.RegisterType((*SessionObjectRequest)(nil), "sessions_v1.SessionObjectRequest")
	proto.RegisterType((*SessionObjectReply)(nil), "sessions_v1.SessionObjectReply")
	proto.RegisterType((*SessionEmptyReply)(nil), "sessions_v1.SessionEmptyReply")
}

func init() { proto.RegisterFile("protos/sessions_v1.proto", fileDescriptor_e3ff36d687210b6b) }

var fileDescriptor_e3ff36d687210b6b = []byte{
	// 941 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdb, 0x6e, 0xdb, 0x46,
	0x10, 0x8d, 0x28, 0xeb, 0x36, 0x54, 0x12, 0x67, 0x63, 0x24, 0x5b, 0x15, 0x6e, 0x5c, 0x22, 0x01,
	0x8c, 0x5e, 0x54, 0xd8, 0x79, 0x69, 0x83, 0x3e, 0x25, 0x72, 0x51, 0x03, 0x4d, 0xa2, 0x52, 0x71,
	0x10, 0x14, 0x2d, 0x88, 0x35, 0x39, 0x15, 0xb6, 0xa6, 0x44, 0x76, 0x77, 0x25, 0x94, 0x7f, 0x53,
	0xf4, 0x77, 0xfa, 0xd6, 0xaf, 0xe8, 0x53, 0xbf, 0xa1, 0xd8, 0x0b, 0x25, 0x3a, 0xa5, 0x53, 0xcb,
	0xf1, 0xdb, 0xce, 0xec, 0xcc, 0x99, 0xd9, 0x33, 0x67, 0x28, 0x01, 0xcd, 0x45, 0xa6, 0x32, 0xf9,
	0x85, 0x44, 0x29, 0x79, 0x36, 0x97, 0xd1, 0xf2, 0x60, 0x68, 0x5c, 0xc4, 0xaf, 0xb8, 0x82, 0xbf,
	0x3d, 0xd8, 0x3e, 0x12, 0x22, 0x13, 0x23, 0x94, 0xb1, 0xe0, 0xb9, 0xe2, 0xd9, 0x9c, 0x10, 0xd8,
	0x52, 0x45, 0x8e, 0xb4, 0xb1, 0xd7, 0xd8, 0xef, 0x85, 0xe6, 0x4c, 0x06, 0xd0, 0x8d, 0x99, 0xc2,
	0x69, 0x26, 0x0a, 0xea, 0x19, 0xff, 0xca, 0xd6, 0xf1, 0x71, 0x96, 0x20, 0x6d, 0xda, 0x78, 0x7d,
	0x26, 0x8f, 0xe0, 0x56, 0x9c, 0x09, 0x81, 0x29, 0xd3, 0x90, 0x11, 0x4f, 0xe8, 0x96, 0xb9, 0xbd,
	0x59, 0xf1, 0x1e, 0x27, 0xe4, 0x1e, 0xb4, 0xa5, 0x62, 0x6a, 0x21, 0x69, 0xcb, 0x5c, 0x3b, 0x8b,
	0x50, 0xe8, 0xcc, 0x50, 0x4a, 0x36, 0x45, 0xda, 0x36, 0x17, 0xa5, 0x49, 0x76, 0xa0, 0x15, 0xb3,
	0x85, 0x44, 0xda, 0x31, 0x7e, 0x6b, 0x90, 0x07, 0xe0, 0x4b, 0xc5, 0xe2, 0xb3, 0x48, 0x09, 0x16,
	0x23, 0xed, 0x9a, 0x3b, 0x30, 0xae, 0x57, 0xda, 0x43, 0x46, 0xd0, 0x49, 0x50, 0x31, 0x9e, 0x4a,
	0xda, 0xdb, 0x6b, 0xee, 0xfb, 0x87, 0x9f, 0x0c, 0xab, 0xd4, 0xbc, 0xcd, 0xc1, 0x70, 0x64, 0x83,
	0x8f, 0xe6, 0x4a, 0x14, 0x61, 0x99, 0x3a, 0x78, 0x02, 0xfd, 0xea, 0x05, 0xd9, 0x86, 0xe6, 0x19,
	0x16, 0x8e, 0x28, 0x7d, 0xd4, 0xed, 0x2d, 0x59, 0xba, 0x40, 0x47, 0x92, 0x35, 0x9e, 0x78, 0x5f,
	0x36, 0x82, 0xef, 0xa0, 0x3f, 0x66, 0x53, 0x3e, 0x9f, 0x8e, 0x99, 0x60, 0x33, 0xa9, 0x59, 0x93,
	0x67, 0x3c, 0x37, 0xc9, 0xcd, 0xd0, 0x9c, 0x0d, 0xf3, 0xec, 0xcc, 0x26, 0xb7, 0x42, 0x73, 0xd6,
	0x88, 0x2a, 0x53, 0x2c, 0x35, 0xf4, 0x76, 0x43, 0x6b, 0x04, 0xbf, 0x7b, 0xd0, 0x99, 0xd8, 0x07,
	0x90, 0x5b, 0xe0, 0xf1, 0xc4, 0x35, 0xe1, 0xf1, 0x84, 0xdc, 0x87, 0xce, 0x42, 0xa2, 0xd0, 0xa4,
	0xdb, 0x2e, 0xda, 0xda, 0x3c, 0x4e, 0xc8, 0x87, 0xd0, 0x33, 0x17, 0x73, 0x36, 0x2b, 0xa7, 0xd5,
	0xd5, 0x8e, 0x17, 0x6c, 0x86, 0x7a, 0x14, 0x2c, 0x56, 0x7c, 0x89, 0x66, 0x52, 0xdd, 0xd0, 0x59,
	0x3a, 0x29, 0xcb, 0x71, 0x1e, 0x29, 0x3e, 0x43, 0x37, 0xa5, 0xae, 0x76, 0xbc, 0xe2, 0x33, 0x24,
	0xbb, 0x00, 0x71, 0x9a, 0x49, 0xb4, 0xb7, 0x76, 0x54, 0x3d, 0xe3, 0x31, 0xd7, 0x1f, 0x43, 0x5f,
	0xe0, 0xaf, 0x0b, 0x94, 0xca, 0x06, 0xd8, 0x99, 0xf9, 0xce, 0x67, 0x42, 0x28, 0x74, 0x58, 0x92,
	0x08, 0x94, 0xd2, 0x4d, 0xad, 0x34, 0x75, 0x43, 0x71, 0xca, 0x71, 0xae, 0x68, 0xcf, 0xbe, 0xc2,
	0x5a, 0x9a, 0x24, 0xdd, 0x34, 0xf5, 0xad, 0xdc, 0xf4, 0x59, 0xfb, 0x12, 0xa6, 0x18, 0xed, 0x5b,
	0x9f, 0x3e, 0x07, 0xcf, 0xc1, 0x77, 0x0c, 0x8d, 0x9d, 0x70, 0x2c, 0x8f, 0x96, 0x70, 0x6b, 0x90,
	0x7d, 0x97, 0xe8, 0x19, 0x51, 0xec, 0x9c, 0x13, 0x85, 0xcb, 0x76, 0x70, 0xff, 0x34, 0x80, 0x54,
	0xf0, 0x42, 0xfb, 0x86, 0x1a, 0xa1, 0x37, 0xea, 0x84, 0xfe, 0x0c, 0xda, 0x3f, 0xf3, 0x54, 0xa1,
	0x70, 0x95, 0x3e, 0xad, 0xab, 0x54, 0xc1, 0x1d, 0x7e, 0x63, 0xa2, 0xad, 0xfe, 0x5c, 0x2a, 0x39,
	0x80, 0x76, 0x6e, 0x24, 0x64, 0x86, 0xe7, 0x1f, 0x7e, 0x70, 0x0e, 0xa4, 0xaa, 0xae, 0xd0, 0x05,
	0x0e, 0xbe, 0x02, 0xbf, 0x82, 0xb4, 0x91, 0x60, 0x17, 0xb0, 0x7d, 0xae, 0xaf, 0x3c, 0x2d, 0xc8,
	0x63, 0x68, 0xa1, 0x5e, 0x15, 0x83, 0xe0, 0x1f, 0xee, 0xbe, 0x73, 0x89, 0x42, 0x1b, 0x4b, 0x3e,
	0x83, 0xad, 0x5c, 0x6f, 0xb2, 0x67, 0x72, 0xe8, 0x85, 0x2f, 0x37, 0x51, 0xc1, 0x9b, 0x55, 0xd9,
	0xe3, 0x64, 0x43, 0x92, 0x77, 0x01, 0x1c, 0xf6, 0x5a, 0xfb, 0x3d, 0x59, 0x82, 0x05, 0x7f, 0xae,
	0x27, 0xf8, 0x32, 0xc7, 0xf9, 0x86, 0xe0, 0x57, 0xdb, 0xaa, 0x8a, 0xbc, 0xb7, 0x2e, 0x92, 0x77,
	0xab, 0x56, 0xde, 0xed, 0x1a, 0x79, 0x77, 0x2a, 0xf2, 0x96, 0x70, 0xdf, 0x3d, 0x66, 0xa2, 0x32,
	0x81, 0x23, 0xa6, 0xd8, 0xb5, 0xd2, 0xb5, 0x2a, 0xda, 0xac, 0x14, 0x55, 0x40, 0x5d, 0xd1, 0x93,
	0x3c, 0x61, 0x0a, 0x4f, 0x24, 0x8a, 0x6b, 0xaf, 0x6a, 0x9e, 0xdf, 0x5c, 0x3f, 0x3f, 0xf8, 0x1a,
	0xee, 0xba, 0xaa, 0x47, 0xb3, 0x5c, 0x15, 0x9b, 0x15, 0x0c, 0x66, 0xb0, 0x53, 0x4e, 0xfd, 0xf4,
	0x17, 0x8c, 0xd5, 0x86, 0xfd, 0x0e, 0xa1, 0xe3, 0xba, 0x73, 0x02, 0xae, 0xff, 0x48, 0x94, 0x41,
	0x41, 0xb1, 0x16, 0x99, 0x2b, 0x77, 0xe5, 0xc5, 0xd9, 0xb4, 0xf4, 0xb7, 0x70, 0xe7, 0x3c, 0x4f,
	0x57, 0xad, 0x7c, 0xf8, 0x57, 0x0b, 0xba, 0x0e, 0x4a, 0x92, 0x31, 0xf4, 0xa7, 0xa8, 0xa2, 0x32,
	0x8f, 0x3c, 0xf8, 0x9f, 0x6f, 0xd7, 0x60, 0xf7, 0xe2, 0x80, 0x3c, 0x2d, 0x82, 0x1b, 0xe4, 0x04,
	0xee, 0x54, 0x10, 0xa3, 0xd3, 0x22, 0xe2, 0x09, 0xa9, 0xcd, 0x5a, 0x7d, 0x03, 0x06, 0xb5, 0x55,
	0x2b, 0x14, 0x07, 0x37, 0x48, 0x08, 0x7d, 0xf3, 0x53, 0xe5, 0x02, 0xeb, 0x1b, 0xad, 0xac, 0xfe,
	0x65, 0x30, 0x7f, 0x02, 0x22, 0xf5, 0x7e, 0xad, 0x9a, 0xd5, 0x7b, 0x40, 0x1e, 0xd6, 0x25, 0xbe,
	0xbd, 0x87, 0x97, 0x81, 0x8f, 0xe0, 0xee, 0xc2, 0x6c, 0xd2, 0x0a, 0xdf, 0x2c, 0xfc, 0xa3, 0xba,
	0xcc, 0xff, 0xac, 0xdc, 0x65, 0x0a, 0x7c, 0x0f, 0x37, 0xed, 0x2f, 0x74, 0x49, 0xca, 0xfb, 0xd3,
	0xfc, 0x23, 0xdc, 0xb3, 0x90, 0xf8, 0x5b, 0xce, 0x05, 0x26, 0x6b, 0x65, 0xec, 0xd5, 0x25, 0x57,
	0x77, 0x76, 0xf0, 0xd1, 0x3b, 0x22, 0x2c, 0xfa, 0x1b, 0xd8, 0x49, 0x30, 0xc5, 0x0a, 0x23, 0xd7,
	0x24, 0x8f, 0xa7, 0x13, 0x78, 0x98, 0xf3, 0xfc, 0x73, 0x89, 0x62, 0xc9, 0x63, 0x94, 0x43, 0xcd,
	0xb4, 0x5c, 0xa5, 0x0d, 0x97, 0x28, 0xf4, 0xe1, 0xe0, 0xe9, 0xed, 0x52, 0xf9, 0x63, 0xfd, 0x87,
	0xf9, 0xf5, 0xc1, 0xb8, 0xf1, 0x43, 0xdb, 0xfe, 0x9d, 0xfe, 0xc3, 0xbb, 0x3d, 0x39, 0x9a, 0x4c,
	0x8e, 0x5f, 0xbe, 0x98, 0x44, 0xcf, 0x9e, 0x8f, 0xa2, 0xd7, 0x07, 0xa7, 0xf6, 0xe6, 0xf1, 0xbf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x52, 0x92, 0x16, 0x71, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SessionsClient is the client API for Sessions service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SessionsClient interface {
	GetSessions(ctx context.Context, in *SessionPageRequest, opts ...grpc.CallOption) (*SessionPageReply, error)
	GetSessionById(ctx context.Context, in *SessionIdRequest, opts ...grpc.CallOption) (*SessionObjectReply, error)
	OpenSession(ctx context.Context, in *SessionOpenRequest, opts ...grpc.CallOption) (*SessionObjectReply, error)
	StoreSessionData(ctx context.Context, in *SessionStoreDataRequest, opts ...grpc.CallOption) (*SessionObjectReply, error)
	UpdateSessionUser(ctx context.Context, in *SessionUpdateUserRequest, opts ...grpc.CallOption) (*SessionObjectReply, error)
	CloseSession(ctx context.Context, in *SessionIdRequest, opts ...grpc.CallOption) (*SessionObjectReply, error)
	CloseExpiredSessions(ctx context.Context, in *SessionEmptyRequest, opts ...grpc.CallOption) (*SessionEmptyReply, error)
	DeleteSessionById(ctx context.Context, in *SessionIdRequest, opts ...grpc.CallOption) (*SessionObjectReply, error)
}

type sessionsClient struct {
	cc *grpc.ClientConn
}

func NewSessionsClient(cc *grpc.ClientConn) SessionsClient {
	return &sessionsClient{cc}
}

func (c *sessionsClient) GetSessions(ctx context.Context, in *SessionPageRequest, opts ...grpc.CallOption) (*SessionPageReply, error) {
	out := new(SessionPageReply)
	err := c.cc.Invoke(ctx, "/sessions_v1.Sessions/get_sessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsClient) GetSessionById(ctx context.Context, in *SessionIdRequest, opts ...grpc.CallOption) (*SessionObjectReply, error) {
	out := new(SessionObjectReply)
	err := c.cc.Invoke(ctx, "/sessions_v1.Sessions/get_session_by_id", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsClient) OpenSession(ctx context.Context, in *SessionOpenRequest, opts ...grpc.CallOption) (*SessionObjectReply, error) {
	out := new(SessionObjectReply)
	err := c.cc.Invoke(ctx, "/sessions_v1.Sessions/open_session", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsClient) StoreSessionData(ctx context.Context, in *SessionStoreDataRequest, opts ...grpc.CallOption) (*SessionObjectReply, error) {
	out := new(SessionObjectReply)
	err := c.cc.Invoke(ctx, "/sessions_v1.Sessions/store_session_data", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsClient) UpdateSessionUser(ctx context.Context, in *SessionUpdateUserRequest, opts ...grpc.CallOption) (*SessionObjectReply, error) {
	out := new(SessionObjectReply)
	err := c.cc.Invoke(ctx, "/sessions_v1.Sessions/update_session_user", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsClient) CloseSession(ctx context.Context, in *SessionIdRequest, opts ...grpc.CallOption) (*SessionObjectReply, error) {
	out := new(SessionObjectReply)
	err := c.cc.Invoke(ctx, "/sessions_v1.Sessions/close_session", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsClient) CloseExpiredSessions(ctx context.Context, in *SessionEmptyRequest, opts ...grpc.CallOption) (*SessionEmptyReply, error) {
	out := new(SessionEmptyReply)
	err := c.cc.Invoke(ctx, "/sessions_v1.Sessions/close_expired_sessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsClient) DeleteSessionById(ctx context.Context, in *SessionIdRequest, opts ...grpc.CallOption) (*SessionObjectReply, error) {
	out := new(SessionObjectReply)
	err := c.cc.Invoke(ctx, "/sessions_v1.Sessions/delete_session_by_id", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SessionsServer is the server API for Sessions service.
type SessionsServer interface {
	GetSessions(context.Context, *SessionPageRequest) (*SessionPageReply, error)
	GetSessionById(context.Context, *SessionIdRequest) (*SessionObjectReply, error)
	OpenSession(context.Context, *SessionOpenRequest) (*SessionObjectReply, error)
	StoreSessionData(context.Context, *SessionStoreDataRequest) (*SessionObjectReply, error)
	UpdateSessionUser(context.Context, *SessionUpdateUserRequest) (*SessionObjectReply, error)
	CloseSession(context.Context, *SessionIdRequest) (*SessionObjectReply, error)
	CloseExpiredSessions(context.Context, *SessionEmptyRequest) (*SessionEmptyReply, error)
	DeleteSessionById(context.Context, *SessionIdRequest) (*SessionObjectReply, error)
}

// UnimplementedSessionsServer can be embedded to have forward compatible implementations.
type UnimplementedSessionsServer struct {
}

func (*UnimplementedSessionsServer) GetSessions(ctx context.Context, req *SessionPageRequest) (*SessionPageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSessions not implemented")
}
func (*UnimplementedSessionsServer) GetSessionById(ctx context.Context, req *SessionIdRequest) (*SessionObjectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSessionById not implemented")
}
func (*UnimplementedSessionsServer) OpenSession(ctx context.Context, req *SessionOpenRequest) (*SessionObjectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenSession not implemented")
}
func (*UnimplementedSessionsServer) StoreSessionData(ctx context.Context, req *SessionStoreDataRequest) (*SessionObjectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreSessionData not implemented")
}
func (*UnimplementedSessionsServer) UpdateSessionUser(ctx context.Context, req *SessionUpdateUserRequest) (*SessionObjectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSessionUser not implemented")
}
func (*UnimplementedSessionsServer) CloseSession(ctx context.Context, req *SessionIdRequest) (*SessionObjectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseSession not implemented")
}
func (*UnimplementedSessionsServer) CloseExpiredSessions(ctx context.Context, req *SessionEmptyRequest) (*SessionEmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseExpiredSessions not implemented")
}
func (*UnimplementedSessionsServer) DeleteSessionById(ctx context.Context, req *SessionIdRequest) (*SessionObjectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSessionById not implemented")
}

func RegisterSessionsServer(s *grpc.Server, srv SessionsServer) {
	s.RegisterService(&_Sessions_serviceDesc, srv)
}

func _Sessions_GetSessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionPageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServer).GetSessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sessions_v1.Sessions/GetSessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServer).GetSessions(ctx, req.(*SessionPageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sessions_GetSessionById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServer).GetSessionById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sessions_v1.Sessions/GetSessionById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServer).GetSessionById(ctx, req.(*SessionIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sessions_OpenSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionOpenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServer).OpenSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sessions_v1.Sessions/OpenSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServer).OpenSession(ctx, req.(*SessionOpenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sessions_StoreSessionData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionStoreDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServer).StoreSessionData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sessions_v1.Sessions/StoreSessionData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServer).StoreSessionData(ctx, req.(*SessionStoreDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sessions_UpdateSessionUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionUpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServer).UpdateSessionUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sessions_v1.Sessions/UpdateSessionUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServer).UpdateSessionUser(ctx, req.(*SessionUpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sessions_CloseSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServer).CloseSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sessions_v1.Sessions/CloseSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServer).CloseSession(ctx, req.(*SessionIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sessions_CloseExpiredSessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionEmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServer).CloseExpiredSessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sessions_v1.Sessions/CloseExpiredSessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServer).CloseExpiredSessions(ctx, req.(*SessionEmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sessions_DeleteSessionById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServer).DeleteSessionById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sessions_v1.Sessions/DeleteSessionById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServer).DeleteSessionById(ctx, req.(*SessionIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sessions_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sessions_v1.Sessions",
	HandlerType: (*SessionsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "get_sessions",
			Handler:    _Sessions_GetSessions_Handler,
		},
		{
			MethodName: "get_session_by_id",
			Handler:    _Sessions_GetSessionById_Handler,
		},
		{
			MethodName: "open_session",
			Handler:    _Sessions_OpenSession_Handler,
		},
		{
			MethodName: "store_session_data",
			Handler:    _Sessions_StoreSessionData_Handler,
		},
		{
			MethodName: "update_session_user",
			Handler:    _Sessions_UpdateSessionUser_Handler,
		},
		{
			MethodName: "close_session",
			Handler:    _Sessions_CloseSession_Handler,
		},
		{
			MethodName: "close_expired_sessions",
			Handler:    _Sessions_CloseExpiredSessions_Handler,
		},
		{
			MethodName: "delete_session_by_id",
			Handler:    _Sessions_DeleteSessionById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/sessions_v1.proto",
}
